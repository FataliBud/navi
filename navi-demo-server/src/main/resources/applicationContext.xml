<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-3.0.xsd   
        http://www.springframework.org/schema/mvc   
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd   
        http://www.springframework.org/schema/tx   
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <context:annotation-config/>
    <context:component-scan base-package="com.baidu.beidou"/>
    <context:property-placeholder location="classpath*:/rpc-server.properties"/>

    <bean class="com.baidu.beidou.navi.conf.RpcServerConf">
        <property name="ENABLE_ZK_REGISTRY">
            <value>${ENABLE_ZK_REGISTRY}</value>
        </property>
        <property name="ZK_SERVER_LIST">
            <value>${ZK_SERVER_LIST}</value>
        </property>
        <property name="ZK_DIGEST_AUTH">
            <value>${ZK_DIGEST_AUTH}</value>
        </property>
        <property name="ZK_DEFAULT_SESSION_TIMEOUT_MILLS">
            <value>${ZK_DEFAULT_SESSION_TIMEOUT_MILLS}</value>
        </property>
        <property name="ZK_CONNECTION_TIMEOUT_MILLS">
            <value>${ZK_CONNECTION_TIMEOUT_MILLS}</value>
        </property>
        <property name="ZK_REGISTRY_NAMESPACE">
            <value>${ZK_REGISTRY_NAMESPACE}</value>
        </property>
        <property name="SERVER_PORT">
            <value>${SERVER_PORT}</value>
        </property>
    </bean>

    
    <!-- service begin -->
    <bean id="bookService" class="com.baidu.beidou.sample.xml.service.impl.BookMgrImpl">
    </bean>
    <!-- service end -->

    <!-- RpcExporter begin -->
    <bean id="bookExporter" class="com.baidu.beidou.navi.server.NaviRpcExporter"
          scope="singleton">
        <property name="serviceInterfaceName" value="com.baidu.beidou.sample.xml.service.BookMgr"/>
        <property name="serviceBean">
            <ref bean="bookProxy"/>
        </property>
    </bean>
    <!-- RpcExporter end -->

    <!-- 代理定义 -->
    <bean id="bookProxy" parent="apiProxyBase">
        <property name="target" ref="bookService"></property>
        <property name="proxyInterfaces"
                  value="com.baidu.beidou.sample.xml.service.BookMgr">
        </property>
    </bean>

    <bean id="accessLogInterceptor"
          class="com.baidu.beidou.sample.xml.interceptor.AccessLogInterceptor">
    </bean>

    <bean id="accessLogAdvisor"
          class="org.springframework.aop.aspectj.AspectJExpressionPointcutAdvisor">
        <property name="advice" ref="accessLogInterceptor"></property>
        <property name="expression"
                  value="(execution(* *.*(..)))">
        </property>
    </bean>

    <bean id="apiProxyBase"
          class="org.springframework.aop.framework.ProxyFactoryBean"
          abstract="true">
        <property name="interceptorNames">
            <list>
                <value>accessLogAdvisor</value>
            </list>
        </property>
    </bean>

</beans>